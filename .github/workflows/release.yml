name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.1
        extensions: mbstring, xml, zip, gd, curl, mysql
    
    - name: Install dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader
    
    - name: Run tests
      run: |
        composer test-unit
        composer test-integration
        composer test-smoke
      env:
        WP_TESTS_DIR: /tmp/wordpress-tests-lib
        WP_CORE_DIR: /tmp/wordpress/
    
    - name: Generate release notes
      id: release_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate release notes
        echo "## $VERSION Release Notes" > release_notes.md
        echo "" >> release_notes.md
        echo "### 🎉 What's New" >> release_notes.md
        echo "This release includes:" >> release_notes.md
        echo "" >> release_notes.md
        
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          echo "### 📝 Changes since $LAST_TAG" >> release_notes.md
          git log --pretty=format:"- %s" $LAST_TAG..HEAD >> release_notes.md
        else
          echo "### 📝 Initial Release" >> release_notes.md
          echo "- Initial beta release with core features" >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "### 🛠️ Technical Details" >> release_notes.md
        echo "- WordPress 6.5+ compatibility" >> release_notes.md
        echo "- PHP 8.1+ requirement" >> release_notes.md
        echo "- Gutenberg-only development" >> release_notes.md
        echo "- Comprehensive testing framework" >> release_notes.md
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: News Plugin ${{ steps.release_notes.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./news.zip
        asset_name: news-plugin-${{ steps.release_notes.outputs.version }}.zip
        asset_content_type: application/zip
